plugins {
    id 'com.android.library'
    id 'kotlin-android'

    /*用于kotlin生成javadoc*/
    id 'org.jetbrains.dokka'
    /*用于上传maven*/
    id 'maven-publish'
}

android {
    compileSdkVersion rootProject.ext.globalCompileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.globalMinSdkVersion
        targetSdkVersion rootProject.ext.globalTargetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api androidDeps.coreKtx
    api androidDeps.appcompat
    api androidDeps.material
//    api "com.google.android.flexbox:flexbox:$flexbox_version"


    //permission: 个人权限处理框架
    implementation 'halo.android:permission:1.0.5-rc'

    /*基础代码库*/
    gradle.ext.depApi(this,'lib-core')
//    debugApi project(path: ':lib-core')
//    releaseApi("bas.lib:lib-core:0.0.3")

    gradle.ext.depApiInert(this,'adapter-imageloader')
//    debugApi project(path: ':adapter-imageloader')
//    releaseApi(basDeps.adapterImageloader)

    gradle.ext.depApiInert(this,'systemui')
//    debugApi project(path: ':systemui')
//    releaseApi basDeps.systemui

    gradle.ext.depApiInert(this,'droid-theme')
//    releaseApi "bas.droid:droid-theme:0.0.1"
//    debugApi project(path: ':droid-theme')

    /*lifecycle */
    /**
     *  [Lifecycle-ViewModel]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    /**
     *  [Lifecycle-LiveData]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    /**
     * lifecycle-runtime-ktx 给每个 LifeCycle 对象通过扩展属性定义了协程作用域 lifecycleScope
     * https://www.cnblogs.com/bingxinshuo/archive/2019/10/21/11717209.html
     */
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    /*必备组件 JetPack系列 END*/

    /**
     *  [Retrofit Converter Gson] 使用Gson作为Retrofit的序列化和反序列化工具
     *  <proguard>
     *  https://github.com/square/retrofit/wiki/Converters
     *  https://github.com/google/gson
     */
//    compileOnly "com.squareup.retrofit2:converter-jackson:$retrofit_version"
//    compileOnly "com.squareup.retrofit2:converter-gson:$retrofit_version"
//    compileOnly 'org.ligboy.retrofit2:converter-fastjson:2.0.2'
}

