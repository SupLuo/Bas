apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'


android {
    compileSdkVersion rootProject.ext.globalCompileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.globalMinSdkVersion
        targetSdkVersion rootProject.ext.globalTargetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {


    //    debugApi project(path: ':droid-core')
//    releaseApi("bas.droid:droid-core:$droid_core_version")
//    api("bas.droid:droid-core:$droid_core_version")
    gradle.ext.depImplementation(this, 'droid-core')
    api project(path: ':ui-statelayout')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


/*    *//**
     * 多状态布局 https://github.com/lindroy/MultiStateLayout
     * 或者参考 https://github.com/qyxxjd/MultipleStatusView
     *//*
    api 'com.github.lindroy:MultiStateLayout:v0.0.1-beta'*/

    /*Kotlin*/
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    /*Kotlin-协程
    * https://github.com/hltj/kotlinx.coroutines-cn/blob/master/README.md#using-in-your-projects
    * */
    api kotlinDeps.kotlinxCoroutinesCore
    api kotlinDeps.kotlinxCoroutinesAndroid

    /*必备组件 JetPack系列*/
    /*用于core library的初始化*/
    implementation "androidx.startup:startup-runtime:1.0.0"
    api androidDeps.appcompat
    api androidDeps.coreKtx
    /*TextInputLayout等*/
    api androidDeps.material
    api androidDeps.constraintlayout


    /*Page3支持 https://developer.android.google.cn/topic/libraries/architecture/paging/v3-overview?hl=zh_cn*/
    api "androidx.paging:paging-runtime:$paging_version"
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"


    /*lifecycle */
    /**
     *  [Lifecycle-ViewModel]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    /**
     *  [Lifecycle-LiveData]
     *  https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
     */
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    /**
     * lifecycle-runtime-ktx 给每个 LifeCycle 对象通过扩展属性定义了协程作用域 lifecycleScope
     * https://www.cnblogs.com/bingxinshuo/archive/2019/10/21/11717209.html
     */
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    /*必备组件 JetPack系列 END*/


    /*第三方常用系列*/
    /*START - Glide*/
    /**
     *  Glide
     *  <proguard>已添加混淆规则
     *  https://github.com/bumptech/glide
     *  https://muyangmin.github.io/glide-docs-cn/doc/download-setup.html
     * Min Sdk Version - 使用 Glide 需要 min SDK 版本 API 14 (Ice Cream Sandwich) 或更高。
     * Compile Sdk Version - Glide 必须使用 API 27 (Oreo MR1) 或更高版本的 SDK 来编译。
     * Support Library Version - Glide 使用的支持库版本为 27。
     */
    api("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.android.support"
    }
    /**
     *  Glide OkHttp集成库
     *  将使 Glide 自动开始使用 OkHttp 来加载所有来自 http 和 https URL 的图片
     */
    api("com.github.bumptech.glide:okhttp-integration:$glide_version") {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
    }
    /*END - Glide*/

    //permission: 个人权限处理框架
    api('halo.android:permission:1.0.5-rc')
}
